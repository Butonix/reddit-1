enum Roles {
  ADMIN
  MODERATOR
  USER
  POSTCREATE
  POSTUPDATE
  POSTDELETE
  SUBCREATE
  SUBUPDATE
  SUBDELETE
  ROLEUPDATE
}

enum SubredditTypes {
  PUBLIC
  PRIVATE
  RESTRICTED
}

type User {
  id: ID! @unique @id
  username: String! @unique
  email: String! @unique
  password: String!
  image: String
  followers: [User]!
  resetToken: String
  resetTokenExpiry: Float
  roles: [Roles] @scalarList(strategy: RELATION)
  posts: [Post!]! @relation(name: "PostsByUser" onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Subreddit {
  id: ID! @unique @id
  name: String!
  description: String
  topics: [String]! @scalarList(strategy: RELATION)
  isNSFW: Boolean! @default(value: false)
  type: [SubredditTypes] @scalarList(strategy: RELATION)
  path: String! @unique
  image: String
  headerBgImage: String
  createdBy: User! @relation(name: "SubredditsByUser")
  moderators: [User!]! @relation(name: "ModsOfSubreddit" onDelete: CASCADE)
  followers: [User]! @relation(name: "FollowersOfSubreddit" onDelete: CASCADE)
  posts: [Post!]! @relation(name: "PostsInSubreddit" onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Post {
  id: ID! @unique @id
  title: String!
  description: String
  image: String
  link: String
  postedBy: User! @relation(name: "PostsByUser")
  subreddit: Subreddit! @relation(name: "PostsInSubreddit")
  isOC: Boolean! @default(value: false)
  isNSFW: Boolean! @default(value: false)
  isNSFL: Boolean! @default(value: false)
  isSerious: Boolean! @default(value: false)
  hasSpoiler: Boolean! @default(value: false)
  upvotes: [Upvote!]!
  downvotes: [Downvote!]!
  comments: [Comment!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Comment {
  id: ID! @unique @id
  body: String!
  commentedBy: User!
  upvotes: [Upvote!]!
  downvotes: [Downvote!]!
  post: Post!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Upvote {
  id: ID! @unique @id
  upvotedBy: User!
  post: Post
  comment: Comment
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Downvote {
  id: ID! @unique @id
  downvotedBy: User!
  post: Post
  comment: Comment
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
